<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>top.ulane</groupId>
  <artifactId>springtest</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>

	<repositories>
		<repository>
			<id>nexus_ulane</id>
			<name>nexus_ulane</name>
			<url>http://nexus.ulane.top/nexus/content/groups/public/</url>
		</repository>
	</repositories>
	
	<dependencies>
		<!-- 测试时取消注释 -->
		<!-- <dependency>
			<groupId>cn.ulane</groupId>
			<artifactId>teststarter-logext-autoconfigure</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<scope>runtime</scope>
		</dependency> -->
		
		<dependency>
			<groupId>cn.ulane</groupId>
			<artifactId>teststarter-logext-autoconfigure</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<classifier>jar-with-dependencies</classifier>
		</dependency>
		
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.2</version>
			<!-- <scope>provided</scope> -->
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>4.2.4.RELEASE</version>
		</dependency>
	  	<dependency>
	  		<groupId>org.springframework</groupId>
	  		<artifactId>spring-jdbc</artifactId>
	  		<version>4.2.4.RELEASE</version>
	  	</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
<!-- 		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>servlet-api</artifactId>
		    <version>2.3</version>
			<scope>provided</scope>
		</dependency> -->
		
	  	<dependency>
	  		<groupId>org.mybatis</groupId>
	  		<artifactId>mybatis-spring</artifactId>
	  		<version>1.2.3</version>
	  	</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.2.5</version>
		</dependency>
		
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.0.9</version>
		</dependency>
		
	  	<dependency>
	  		<groupId>mysql</groupId>
	  		<artifactId>mysql-connector-java</artifactId>
	  		<version>5.1.24</version>
	  	</dependency>
	  	
		<dependency>
		    <groupId>com.alibaba</groupId>
		    <artifactId>fastjson</artifactId>
		    <version>1.2.47</version>
		</dependency>
		
	  	<dependency>
	  		<groupId>com.fasterxml.jackson.core</groupId>
	  		<artifactId>jackson-databind</artifactId>
	  		<version>2.9.7</version>
	  	</dependency>
		
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.9.6</version>
		</dependency>
		
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.3</version>
		</dependency>
		
		<dependency>
		    <groupId>org.javassist</groupId>
		    <artifactId>javassist</artifactId>
		    <version>3.27.0-GA</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>4.2.4.RELEASE</version>
		</dependency>
	  	<dependency>
	  		<groupId>junit</groupId>
	  		<artifactId>junit</artifactId>
	  		<version>4.12</version>
	  	</dependency>
	</dependencies>


	<build>
<!-- 		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
			</resource>
			<resource>
				<directory>${project.basedir}/src/main/resources-filtered/${environment}</directory>
				<filtering>true</filtering>
			</resource>
		</resources> -->
		<!-- classpath:spring/spring-*.xml有二级目录时，可以不用定义testResources -->
<!-- 		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
			<testResource>
				<directory>src/main/resources</directory>
			</testResource>
		</testResources> -->
		<plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
			<!-- 默认7.0.47版本太旧，改为使用server模式7.0.108版本
				** ClassLoader [org.apache.catalina.loader.WebappClassLoader] does NOT provide an 'addTransformer(ClassFileTransformer)' method. Specify a custom LoadTimeWeaver or start your Java virtual machine with Spring's agent: -javaagent:org.springframework.instrument.jar -->
<!-- 			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<configuration>
					<path>/springtest</path>
					<port>8081</port>
				</configuration>
			</plugin> -->
            <plugin>
                <groupId>wang.ulane.gen</groupId>
                <artifactId>mybatis-ulane-maven-plugin</artifactId>
                <version>1.3.1-SNAPSHOT</version>
            </plugin>
		</plugins>
	</build>
</project>